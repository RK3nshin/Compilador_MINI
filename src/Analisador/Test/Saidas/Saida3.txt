line: 1 char: 0 match: --program--
action [42] { Yytoken token = new Yytoken(Sym.PROGRAM, yytext(), yyline, yychar, yychar + 7, "Palavra reservada: program");
    tabelaSimbolos.adicionarEntrada(token);
    return token; }
Posicao na TS: 0
lexema: program
Index: 2
Name: Palavra reservada: program
Line: 0
Begin: 0
End: 7
line: 1 char: 7 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 1 char: 8 match: --teste3--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 19
lexema: teste3
Index: 21
Name: Identifier
Line: 0
Begin: 8
End: 14
line: 1 char: 14 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 2 char: 15 match: --declare--
action [48] { Yytoken token = new Yytoken(Sym.DECLARE, yytext(), yyline, yychar, yychar + 7, "Palavra reservada: declare");
    tabelaSimbolos.adicionarEntrada(token);
    return token; }
Posicao na TS: 1
lexema: declare
Index: 3
Name: Palavra reservada: declare
Line: 1
Begin: 15
End: 22
line: 2 char: 22 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 23 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 24 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 25 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 26 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 27 match: --integer--
action [60] { Yytoken token = new Yytoken(Sym.INTEGER, yytext(), yyline, yychar, yychar + 7, "Palavra reservada: integer");
    tabelaSimbolos.adicionarEntrada(token);
    return token; }
Posicao na TS: 3
lexema: integer
Index: 5
Name: Palavra reservada: integer
Line: 2
Begin: 27
End: 34
line: 3 char: 34 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 35 match: --id--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 20
lexema: id
Index: 21
Name: Identifier
Line: 2
Begin: 35
End: 37
line: 3 char: 37 match: --,--
action [185] { Yytoken token = new Yytoken(Sym.COMMA, yytext(), yyline, yychar, yychar + 1, "Comma");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 21
lexema: ,
Index: 25
Name: Comma
Line: 2
Begin: 37
End: 38
line: 3 char: 38 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 39 match: --qtd--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 22
lexema: qtd
Index: 21
Name: Identifier
Line: 2
Begin: 39
End: 42
line: 3 char: 42 match: --,--
action [185] { Yytoken token = new Yytoken(Sym.COMMA, yytext(), yyline, yychar, yychar + 1, "Comma");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 21
lexema: ,
Index: 25
Name: Comma
Line: 2
Begin: 42
End: 43
line: 3 char: 43 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 44 match: --cont--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 23
lexema: cont
Index: 21
Name: Identifier
Line: 2
Begin: 44
End: 48
line: 3 char: 48 match: --,--
action [185] { Yytoken token = new Yytoken(Sym.COMMA, yytext(), yyline, yychar, yychar + 1, "Comma");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 21
lexema: ,
Index: 25
Name: Comma
Line: 2
Begin: 48
End: 49
line: 3 char: 49 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 50 match: --soma--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 24
lexema: soma
Index: 21
Name: Identifier
Line: 2
Begin: 50
End: 54
line: 3 char: 54 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 2
Begin: 54
End: 55
line: 3 char: 55 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 4 char: 56 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 5 char: 57 match: --begin--
action [54] { Yytoken token = new Yytoken(Sym.BEGIN, yytext(), yyline, yychar, yychar + 5, "Palavra reservada: begin");
    tabelaSimbolos.adicionarEntrada(token);
    return token; }
Posicao na TS: 2
lexema: begin
Index: 4
Name: Palavra reservada: begin
Line: 4
Begin: 57
End: 62
line: 5 char: 62 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 63 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 64 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 65 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 66 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 67 match: --qtd--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 22
lexema: qtd
Index: 21
Name: Identifier
Line: 5
Begin: 67
End: 70
line: 6 char: 70 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 71 match: --:=--
action [320] { Yytoken token = new Yytoken(Sym.ASSIGN_OP, yytext(), yyline, yychar, yychar + 2, "ASSIGN_OP");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 26
lexema: :=
Index: 24
Name: ASSIGN_OP
Line: 5
Begin: 71
End: 73
line: 6 char: 73 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 74 match: --5--
action [350] { Yytoken token = new Yytoken(Sym.INTEGERCONSTANT, yytext(), yyline, yychar, yychar + yylength(), "Numero Inteiro ");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 27
lexema: 5
Index: 22
Name: Numero Inteiro 
Line: 5
Begin: 74
End: 75
line: 6 char: 75 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 5
Begin: 75
End: 76
line: 6 char: 76 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 77 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 78 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 79 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 80 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 81 match: --cont--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 23
lexema: cont
Index: 21
Name: Identifier
Line: 6
Begin: 81
End: 85
line: 7 char: 85 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 86 match: --:=--
action [320] { Yytoken token = new Yytoken(Sym.ASSIGN_OP, yytext(), yyline, yychar, yychar + 2, "ASSIGN_OP");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 26
lexema: :=
Index: 24
Name: ASSIGN_OP
Line: 6
Begin: 86
End: 88
line: 7 char: 88 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 89 match: --5--
action [350] { Yytoken token = new Yytoken(Sym.INTEGERCONSTANT, yytext(), yyline, yychar, yychar + yylength(), "Numero Inteiro ");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 27
lexema: 5
Index: 22
Name: Numero Inteiro 
Line: 6
Begin: 89
End: 90
line: 7 char: 90 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 6
Begin: 90
End: 91
line: 7 char: 91 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 92 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 93 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 94 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 95 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 96 match: --soma--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 24
lexema: soma
Index: 21
Name: Identifier
Line: 7
Begin: 96
End: 100
line: 8 char: 100 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 101 match: --:=--
action [320] { Yytoken token = new Yytoken(Sym.ASSIGN_OP, yytext(), yyline, yychar, yychar + 2, "ASSIGN_OP");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 26
lexema: :=
Index: 24
Name: ASSIGN_OP
Line: 7
Begin: 101
End: 103
line: 8 char: 103 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 104 match: --0--
action [350] { Yytoken token = new Yytoken(Sym.INTEGERCONSTANT, yytext(), yyline, yychar, yychar + yylength(), "Numero Inteiro ");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 28
lexema: 0
Index: 22
Name: Numero Inteiro 
Line: 7
Begin: 104
End: 105
line: 8 char: 105 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 7
Begin: 105
End: 106
line: 8 char: 106 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 9 char: 107 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 9 char: 108 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 9 char: 109 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 9 char: 110 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 9 char: 111 match: --do--
action [108] { Yytoken token = new Yytoken(Sym.DO, yytext(), yyline, yychar, yychar + 2, "Palavra reservada: do");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 10
lexema: do
Index: 12
Name: Palavra reservada: do
Line: 8
Begin: 111
End: 113
line: 9 char: 113 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 114 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 115 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 116 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 117 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 118 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 119 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 120 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 121 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 10 char: 122 match: --write--
action [136] { Yytoken token = new Yytoken(Sym.WRITE, yytext(), yyline, yychar, yychar + 5, "Palavra reservada: write");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 14
lexema: write
Index: 16
Name: Palavra reservada: write
Line: 9
Begin: 122
End: 127
line: 10 char: 127 match: --(--
action [199] { Yytoken token = new Yytoken(Sym.LEFT_PAREN, yytext(), yyline, yychar, yychar + 1, "Left Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 29
lexema: (
Index: 28
Name: Left Parenthesis
Line: 9
Begin: 127
End: 128
line: 10 char: 128 match: --``Idade:\u00B4\u00B4--
action [343] { Yytoken token = new Yytoken(Sym.TEXTO, yytext(), yyline, yychar, yychar + yylength(), "Literal");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 30
lexema: ``Idade:´´
Index: 45
Name: Literal
Line: 9
Begin: 128
End: 138
line: 10 char: 138 match: --)--
action [192] { Yytoken token = new Yytoken(Sym.RIGHT_PAREN, yytext(), yyline, yychar, yychar + 1, "Right Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 31
lexema: )
Index: 27
Name: Right Parenthesis
Line: 9
Begin: 138
End: 139
line: 10 char: 139 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 9
Begin: 139
End: 140
line: 10 char: 140 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 141 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 142 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 143 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 144 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 145 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 146 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 147 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 148 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 149 match: --read--
action [129] { Yytoken token = new Yytoken(Sym.READ, yytext(), yyline, yychar, yychar + 4, "Palavra reservada: read");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 13
lexema: read
Index: 15
Name: Palavra reservada: read
Line: 10
Begin: 149
End: 153
line: 11 char: 153 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 11 char: 154 match: --(--
action [199] { Yytoken token = new Yytoken(Sym.LEFT_PAREN, yytext(), yyline, yychar, yychar + 1, "Left Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 29
lexema: (
Index: 28
Name: Left Parenthesis
Line: 10
Begin: 154
End: 155
line: 11 char: 155 match: --id--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 20
lexema: id
Index: 21
Name: Identifier
Line: 10
Begin: 155
End: 157
line: 11 char: 157 match: --)--
action [192] { Yytoken token = new Yytoken(Sym.RIGHT_PAREN, yytext(), yyline, yychar, yychar + 1, "Right Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 31
lexema: )
Index: 27
Name: Right Parenthesis
Line: 10
Begin: 157
End: 158
line: 11 char: 158 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 10
Begin: 158
End: 159
line: 11 char: 159 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 160 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 161 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 162 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 163 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 164 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 165 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 166 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 167 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 168 match: --soma--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 24
lexema: soma
Index: 21
Name: Identifier
Line: 11
Begin: 168
End: 172
line: 12 char: 172 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 173 match: --:=--
action [320] { Yytoken token = new Yytoken(Sym.ASSIGN_OP, yytext(), yyline, yychar, yychar + 2, "ASSIGN_OP");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 26
lexema: :=
Index: 24
Name: ASSIGN_OP
Line: 11
Begin: 173
End: 175
line: 12 char: 175 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 176 match: --soma--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 24
lexema: soma
Index: 21
Name: Identifier
Line: 11
Begin: 176
End: 180
line: 12 char: 180 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 181 match: --#--
action [365] { // Não é necessário um token para caracter é melhor reconhecer o literal }
line: 12 char: 182 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 12 char: 183 match: --id--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 20
lexema: id
Index: 21
Name: Identifier
Line: 11
Begin: 183
End: 185
line: 12 char: 185 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 11
Begin: 185
End: 186
line: 12 char: 186 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 187 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 188 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 189 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 190 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 191 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 192 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 193 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 194 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 195 match: --cont--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 23
lexema: cont
Index: 21
Name: Identifier
Line: 12
Begin: 195
End: 199
line: 13 char: 199 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 200 match: --:=--
action [320] { Yytoken token = new Yytoken(Sym.ASSIGN_OP, yytext(), yyline, yychar, yychar + 2, "ASSIGN_OP");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 26
lexema: :=
Index: 24
Name: ASSIGN_OP
Line: 12
Begin: 200
End: 202
line: 13 char: 202 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 203 match: --cont--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 23
lexema: cont
Index: 21
Name: Identifier
Line: 12
Begin: 203
End: 207
line: 13 char: 207 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 208 match: --\u2013--
action [365] { // Não é necessário um token para caracter é melhor reconhecer o literal }
line: 13 char: 209 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 13 char: 210 match: --1--
action [350] { Yytoken token = new Yytoken(Sym.INTEGERCONSTANT, yytext(), yyline, yychar, yychar + yylength(), "Numero Inteiro ");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 32
lexema: 1
Index: 22
Name: Numero Inteiro 
Line: 12
Begin: 210
End: 211
line: 13 char: 211 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 12
Begin: 211
End: 212
line: 13 char: 212 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 14 char: 213 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 15 char: 214 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 15 char: 215 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 15 char: 216 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 15 char: 217 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 15 char: 218 match: --while--
action [122] { Yytoken token = new Yytoken(Sym.WHILE, yytext(), yyline, yychar, yychar + 5, "Palavra reservada: while");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 12
lexema: while
Index: 14
Name: Palavra reservada: while
Line: 14
Begin: 218
End: 223
line: 15 char: 223 match: --(--
action [199] { Yytoken token = new Yytoken(Sym.LEFT_PAREN, yytext(), yyline, yychar, yychar + 1, "Left Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 29
lexema: (
Index: 28
Name: Left Parenthesis
Line: 14
Begin: 223
End: 224
line: 15 char: 224 match: --cont--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 23
lexema: cont
Index: 21
Name: Identifier
Line: 14
Begin: 224
End: 228
line: 15 char: 228 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 15 char: 229 match: -->--
action [228] { Yytoken token = new Yytoken(Sym.GT, yytext(), yyline, yychar, yychar + 1, "GT");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 33
lexema: >
Index: 35
Name: GT
Line: 14
Begin: 229
End: 230
line: 15 char: 230 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 15 char: 231 match: --0--
action [350] { Yytoken token = new Yytoken(Sym.INTEGERCONSTANT, yytext(), yyline, yychar, yychar + yylength(), "Numero Inteiro ");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 28
lexema: 0
Index: 22
Name: Numero Inteiro 
Line: 14
Begin: 231
End: 232
line: 15 char: 232 match: --)--
action [192] { Yytoken token = new Yytoken(Sym.RIGHT_PAREN, yytext(), yyline, yychar, yychar + 1, "Right Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 31
lexema: )
Index: 27
Name: Right Parenthesis
Line: 14
Begin: 232
End: 233
line: 15 char: 233 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 14
Begin: 233
End: 234
line: 15 char: 234 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 16 char: 235 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 16 char: 236 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 16 char: 237 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 16 char: 238 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 16 char: 239 match: --write--
action [136] { Yytoken token = new Yytoken(Sym.WRITE, yytext(), yyline, yychar, yychar + 5, "Palavra reservada: write");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 14
lexema: write
Index: 16
Name: Palavra reservada: write
Line: 15
Begin: 239
End: 244
line: 16 char: 244 match: --(--
action [199] { Yytoken token = new Yytoken(Sym.LEFT_PAREN, yytext(), yyline, yychar, yychar + 1, "Left Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 29
lexema: (
Index: 28
Name: Left Parenthesis
Line: 15
Begin: 244
End: 245
line: 16 char: 245 match: --`` Media: \u00B4\u00B4--
action [343] { Yytoken token = new Yytoken(Sym.TEXTO, yytext(), yyline, yychar, yychar + yylength(), "Literal");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 34
lexema: `` Media: ´´
Index: 45
Name: Literal
Line: 15
Begin: 245
End: 257
line: 16 char: 257 match: --)--
action [192] { Yytoken token = new Yytoken(Sym.RIGHT_PAREN, yytext(), yyline, yychar, yychar + 1, "Right Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 31
lexema: )
Index: 27
Name: Right Parenthesis
Line: 15
Begin: 257
End: 258
line: 16 char: 258 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 15
Begin: 258
End: 259
line: 16 char: 259 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 17 char: 260 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 17 char: 261 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 17 char: 262 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 17 char: 263 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 17 char: 264 match: --write--
action [136] { Yytoken token = new Yytoken(Sym.WRITE, yytext(), yyline, yychar, yychar + 5, "Palavra reservada: write");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 14
lexema: write
Index: 16
Name: Palavra reservada: write
Line: 16
Begin: 264
End: 269
line: 17 char: 269 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 17 char: 270 match: --(--
action [199] { Yytoken token = new Yytoken(Sym.LEFT_PAREN, yytext(), yyline, yychar, yychar + 1, "Left Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 29
lexema: (
Index: 28
Name: Left Parenthesis
Line: 16
Begin: 270
End: 271
line: 17 char: 271 match: --soma--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 24
lexema: soma
Index: 21
Name: Identifier
Line: 16
Begin: 271
End: 275
line: 17 char: 275 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 17 char: 276 match: --/--
action [298] { Yytoken token = new Yytoken(Sym.DIV, yytext(), yyline, yychar, yychar + 1, "Div");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 35
lexema: /
Index: 38
Name: Div
Line: 16
Begin: 276
End: 277
line: 17 char: 277 match: -- --
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 17 char: 278 match: --qtd--
action [329] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 22
lexema: qtd
Index: 21
Name: Identifier
Line: 16
Begin: 278
End: 281
line: 17 char: 281 match: --)--
action [192] { Yytoken token = new Yytoken(Sym.RIGHT_PAREN, yytext(), yyline, yychar, yychar + 1, "Right Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 31
lexema: )
Index: 27
Name: Right Parenthesis
Line: 16
Begin: 281
End: 282
line: 17 char: 282 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 26
Name: Semicolon
Line: 16
Begin: 282
End: 283
line: 17 char: 283 match: --\u000A--
action [336] { // Ignorar espaços em branco e quebras de linha }
line: 18 char: 284 match: --end--
action [101] { Yytoken token = new Yytoken(Sym.END, yytext(), yyline, yychar, yychar + 3, "Palavra reservada: end");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 9
lexema: end
Index: 11
Name: Palavra reservada: end
Line: 17
Begin: 284
End: 287
line: 18 char: 287 match: <<EOF>>
action [377] { tabelaSimbolos.imprimirTabela();
    System.exit(0); }
Tabela de Símbolos:
ID: 0, Lexema: program, Nome: Palavra reservada: program, Index: 2
ID: 1, Lexema: declare, Nome: Palavra reservada: declare, Index: 3
ID: 2, Lexema: begin, Nome: Palavra reservada: begin, Index: 4
ID: 3, Lexema: integer, Nome: Palavra reservada: integer, Index: 5
ID: 4, Lexema: decimal, Nome: Palavra reservada: decimal, Index: 6
ID: 5, Lexema: if, Nome: Palavra reservada: if, Index: 7
ID: 6, Lexema: then, Nome: Palavra reservada: then, Index: 8
ID: 7, Lexema: else, Nome: Palavra reservada: else, Index: 9
ID: 8, Lexema: for, Nome: Palavra reservada: for, Index: 10
ID: 9, Lexema: end, Nome: Palavra reservada: end, Index: 11
ID: 10, Lexema: do, Nome: Palavra reservada: do, Index: 12
ID: 11, Lexema: to, Nome: Palavra reservada: to, Index: 13
ID: 12, Lexema: while, Nome: Palavra reservada: while, Index: 14
ID: 13, Lexema: read, Nome: Palavra reservada: read, Index: 15
ID: 14, Lexema: write, Nome: Palavra reservada: write, Index: 16
ID: 15, Lexema: or, Nome: Palavra reservada: or, Index: 17
ID: 16, Lexema: and, Nome: Palavra reservada: and, Index: 18
ID: 17, Lexema: mod, Nome: Palavra reservada: mod, Index: 19
ID: 18, Lexema: not, Nome: Palavra reservada: not, Index: 20
ID: 19, Lexema: teste3, Nome: Identifier, Index: 21
ID: 20, Lexema: id, Nome: Identifier, Index: 21
ID: 21, Lexema: ,, Nome: Comma, Index: 25
ID: 22, Lexema: qtd, Nome: Identifier, Index: 21
ID: 23, Lexema: cont, Nome: Identifier, Index: 21
ID: 24, Lexema: soma, Nome: Identifier, Index: 21
ID: 25, Lexema: ;, Nome: Semicolon, Index: 26
ID: 26, Lexema: :=, Nome: ASSIGN_OP, Index: 24
ID: 27, Lexema: 5, Nome: Numero Inteiro , Index: 22
ID: 28, Lexema: 0, Nome: Numero Inteiro , Index: 22
ID: 29, Lexema: (, Nome: Left Parenthesis, Index: 28
ID: 30, Lexema: ``Idade:´´, Nome: Literal, Index: 45
ID: 31, Lexema: ), Nome: Right Parenthesis, Index: 27
ID: 32, Lexema: 1, Nome: Numero Inteiro , Index: 22
ID: 33, Lexema: >, Nome: GT, Index: 35
ID: 34, Lexema: `` Media: ´´, Nome: Literal, Index: 45
ID: 35, Lexema: /, Nome: Div, Index: 38
