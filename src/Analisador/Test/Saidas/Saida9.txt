line: 1 char: 0 match: --program--
action [42] { Yytoken token = new Yytoken(Sym.PROGRAM, yytext(), yyline, yychar, yychar + 7, "Palavra reservada: program");
    tabelaSimbolos.adicionarEntrada(token);
    return token; }
Posicao na TS: 0
lexema: program
Index: 2
Name: Palavra reservada: program
Line: 0
Begin: 0
End: 7
line: 1 char: 7 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 1 char: 8 match: --teste8--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 19
lexema: teste8
Index: 21
Name: Identifier
Line: 0
Begin: 8
End: 14
line: 1 char: 14 match: --\u000A--
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 2 char: 15 match: --declare--
action [48] { Yytoken token = new Yytoken(Sym.DECLARE, yytext(), yyline, yychar, yychar + 7, "Palavra reservada: declare");
    tabelaSimbolos.adicionarEntrada(token);
    return token; }
Posicao na TS: 1
lexema: declare
Index: 3
Name: Palavra reservada: declare
Line: 1
Begin: 15
End: 22
line: 2 char: 22 match: --\u000A--
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 23 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 24 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 25 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 26 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 27 match: --decimal--
action [66] { Yytoken token = new Yytoken(Sym.DECIMAL, yytext(), yyline, yychar, yychar + 7, "Palavra reservada: decimal");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 4
lexema: decimal
Index: 6
Name: Palavra reservada: decimal
Line: 2
Begin: 27
End: 34
line: 3 char: 34 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 35 match: --X--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 20
lexema: X
Index: 21
Name: Identifier
Line: 2
Begin: 35
End: 36
line: 3 char: 36 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 3 char: 37 match: --,--
action [185] { Yytoken token = new Yytoken(Sym.COMMA, yytext(), yyline, yychar, yychar + 1, "Comma");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 21
lexema: ,
Index: 26
Name: Comma
Line: 2
Begin: 37
End: 38
line: 3 char: 38 match: --Y--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 22
lexema: Y
Index: 21
Name: Identifier
Line: 2
Begin: 38
End: 39
line: 3 char: 39 match: --\u000A--
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 4 char: 40 match: --begin--
action [54] { Yytoken token = new Yytoken(Sym.BEGIN, yytext(), yyline, yychar, yychar + 5, "Palavra reservada: begin");
    tabelaSimbolos.adicionarEntrada(token);
    return token; }
Posicao na TS: 2
lexema: begin
Index: 4
Name: Palavra reservada: begin
Line: 3
Begin: 40
End: 45
line: 4 char: 45 match: --\u000A--
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 5 char: 46 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 5 char: 47 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 5 char: 48 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 5 char: 49 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 5 char: 50 match: --read--
action [129] { Yytoken token = new Yytoken(Sym.READ, yytext(), yyline, yychar, yychar + 4, "Palavra reservada: read");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 13
lexema: read
Index: 15
Name: Palavra reservada: read
Line: 4
Begin: 50
End: 54
line: 5 char: 54 match: --(--
action [199] { Yytoken token = new Yytoken(Sym.LEFT_PAREN, yytext(), yyline, yychar, yychar + 1, "Left Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 23
lexema: (
Index: 29
Name: Left Parenthesis
Line: 4
Begin: 54
End: 55
line: 5 char: 55 match: --Y--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 22
lexema: Y
Index: 21
Name: Identifier
Line: 4
Begin: 55
End: 56
line: 5 char: 56 match: --)--
action [192] { Yytoken token = new Yytoken(Sym.RIGHT_PAREN, yytext(), yyline, yychar, yychar + 1, "Right Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 24
lexema: )
Index: 28
Name: Right Parenthesis
Line: 4
Begin: 56
End: 57
line: 5 char: 57 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 27
Name: Semicolon
Line: 4
Begin: 57
End: 58
line: 5 char: 58 match: --\u000A--
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 59 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 60 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 61 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 62 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 63 match: --X--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 20
lexema: X
Index: 21
Name: Identifier
Line: 5
Begin: 63
End: 64
line: 6 char: 64 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 65 match: --:=--
action [332] { Yytoken token = new Yytoken(Sym.ASSIGN_OP, yytext(), yyline, yychar, yychar + 2, "ASSIGN_OP");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 26
lexema: :=
Index: 24
Name: ASSIGN_OP
Line: 5
Begin: 65
End: 67
line: 6 char: 67 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 68 match: --Y--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 22
lexema: Y
Index: 21
Name: Identifier
Line: 5
Begin: 68
End: 69
line: 6 char: 69 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 70 match: --*--
action [291] { Yytoken token = new Yytoken(Sym.MULT, yytext(), yyline, yychar, yychar + 1, "Mult");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 27
lexema: *
Index: 38
Name: Mult
Line: 5
Begin: 70
End: 71
line: 6 char: 71 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 6 char: 72 match: --1.9--
action [362] { Yytoken token = new Yytoken(Sym.DECIMALCONSTANT, yytext(), yyline, yychar, yychar + yylength(), "Decimal");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 28
lexema: 1.9
Index: 23
Name: Decimal
Line: 5
Begin: 72
End: 75
line: 6 char: 75 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 27
Name: Semicolon
Line: 5
Begin: 75
End: 76
line: 6 char: 76 match: --\u000A--
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 77 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 78 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 79 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 80 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 81 match: --while--
action [122] { Yytoken token = new Yytoken(Sym.WHILE, yytext(), yyline, yychar, yychar + 5, "Palavra reservada: while");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 12
lexema: while
Index: 14
Name: Palavra reservada: while
Line: 6
Begin: 81
End: 86
line: 7 char: 86 match: --(--
action [199] { Yytoken token = new Yytoken(Sym.LEFT_PAREN, yytext(), yyline, yychar, yychar + 1, "Left Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 23
lexema: (
Index: 29
Name: Left Parenthesis
Line: 6
Begin: 86
End: 87
line: 7 char: 87 match: --X--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 20
lexema: X
Index: 21
Name: Identifier
Line: 6
Begin: 87
End: 88
line: 7 char: 88 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 89 match: -->--
action [228] { Yytoken token = new Yytoken(Sym.GT, yytext(), yyline, yychar, yychar + 1, "GT");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 29
lexema: >
Index: 36
Name: GT
Line: 6
Begin: 89
End: 90
line: 7 char: 90 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 7 char: 91 match: --10--
action [355] { Yytoken token = new Yytoken(Sym.INTEGERCONSTANT, yytext(), yyline, yychar, yychar + yylength(), "Interger");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 30
lexema: 10
Index: 22
Name: Interger
Line: 6
Begin: 91
End: 93
line: 7 char: 93 match: --)--
action [192] { Yytoken token = new Yytoken(Sym.RIGHT_PAREN, yytext(), yyline, yychar, yychar + 1, "Right Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 24
lexema: )
Index: 28
Name: Right Parenthesis
Line: 6
Begin: 93
End: 94
line: 7 char: 94 match: --;--
action [179] { Yytoken token = new Yytoken(Sym.SEMICOLON, yytext(), yyline, yychar, yychar + 1, "Semicolon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 25
lexema: ;
Index: 27
Name: Semicolon
Line: 6
Begin: 94
End: 95
line: 7 char: 95 match: --\u000A--
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 96 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 97 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 98 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 99 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 100 match: --write--
action [136] { Yytoken token = new Yytoken(Sym.WRITE, yytext(), yyline, yychar, yychar + 5, "Palavra reservada: write");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 14
lexema: write
Index: 16
Name: Palavra reservada: write
Line: 7
Begin: 100
End: 105
line: 8 char: 105 match: --(--
action [199] { Yytoken token = new Yytoken(Sym.LEFT_PAREN, yytext(), yyline, yychar, yychar + 1, "Left Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 23
lexema: (
Index: 29
Name: Left Parenthesis
Line: 7
Begin: 105
End: 106
line: 8 char: 106 match: --``--
action [318] { Yytoken token = new Yytoken(Sym.BACKTICK, yytext(), yyline, yychar, yychar + 1, "Backtick");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 31
lexema: ``
Index: 46
Name: Backtick
Line: 7
Begin: 106
End: 107
line: 8 char: 108 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 109 match: --Maior--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 32
lexema: Maior
Index: 21
Name: Identifier
Line: 7
Begin: 109
End: 114
line: 8 char: 114 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 115 match: --que--
action [341] { Yytoken token = new Yytoken(Sym.IDENTIFIER, yytext(), yyline, yychar, yychar + yylength(), "Identifier");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 33
lexema: que
Index: 21
Name: Identifier
Line: 7
Begin: 115
End: 118
line: 8 char: 118 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 119 match: --10--
action [355] { Yytoken token = new Yytoken(Sym.INTEGERCONSTANT, yytext(), yyline, yychar, yychar + yylength(), "Interger");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 30
lexema: 10
Index: 22
Name: Interger
Line: 7
Begin: 119
End: 121
line: 8 char: 121 match: --:--
action [312] { Yytoken token = new Yytoken(Sym.COLON, yytext(), yyline, yychar, yychar + 1, "Colon");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 34
lexema: :
Index: 45
Name: Colon
Line: 7
Begin: 121
End: 122
line: 8 char: 122 match: -- --
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 8 char: 123 match: --\u00B4\u00B4--
action [325] { Yytoken token = new Yytoken(Sym.ACUTE_ACCENT, yytext(), yyline, yychar, yychar + 1, "Acute Accent");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 35
lexema: ´´
Index: 47
Name: Acute Accent
Line: 7
Begin: 123
End: 124
line: 8 char: 125 match: --)--
action [192] { Yytoken token = new Yytoken(Sym.RIGHT_PAREN, yytext(), yyline, yychar, yychar + 1, "Right Parenthesis");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 24
lexema: )
Index: 28
Name: Right Parenthesis
Line: 7
Begin: 125
End: 126
line: 8 char: 126 match: --\u000A--
action [348] { // Ignorar espaços em branco e quebras de linha }
line: 9 char: 127 match: --end--
action [101] { Yytoken token = new Yytoken(Sym.END, yytext(), yyline, yychar, yychar + 3, "Palavra reservada: end");
        tabelaSimbolos.adicionarEntrada(token);

    return token; }
Posicao na TS: 9
lexema: end
Index: 11
Name: Palavra reservada: end
Line: 8
Begin: 127
End: 130
line: 9 char: 130 match: <<EOF>>
action [385] { tabelaSimbolos.imprimirTabela();
    System.exit(0); }
Tabela de Símbolos:
ID: 0, Lexema: program, Nome: Palavra reservada: program, Index: 2
ID: 1, Lexema: declare, Nome: Palavra reservada: declare, Index: 3
ID: 2, Lexema: begin, Nome: Palavra reservada: begin, Index: 4
ID: 3, Lexema: integer, Nome: Palavra reservada: integer, Index: 5
ID: 4, Lexema: decimal, Nome: Palavra reservada: decimal, Index: 6
ID: 5, Lexema: if, Nome: Palavra reservada: if, Index: 7
ID: 6, Lexema: then, Nome: Palavra reservada: then, Index: 8
ID: 7, Lexema: else, Nome: Palavra reservada: else, Index: 9
ID: 8, Lexema: for, Nome: Palavra reservada: for, Index: 10
ID: 9, Lexema: end, Nome: Palavra reservada: end, Index: 11
ID: 10, Lexema: do, Nome: Palavra reservada: do, Index: 12
ID: 11, Lexema: to, Nome: Palavra reservada: to, Index: 13
ID: 12, Lexema: while, Nome: Palavra reservada: while, Index: 14
ID: 13, Lexema: read, Nome: Palavra reservada: read, Index: 15
ID: 14, Lexema: write, Nome: Palavra reservada: write, Index: 16
ID: 15, Lexema: or, Nome: Palavra reservada: or, Index: 17
ID: 16, Lexema: and, Nome: Palavra reservada: and, Index: 18
ID: 17, Lexema: mod, Nome: Palavra reservada: mod, Index: 19
ID: 18, Lexema: not, Nome: Palavra reservada: not, Index: 20
ID: 19, Lexema: teste8, Nome: Identifier, Index: 21
ID: 20, Lexema: X, Nome: Identifier, Index: 21
ID: 21, Lexema: ,, Nome: Comma, Index: 26
ID: 22, Lexema: Y, Nome: Identifier, Index: 21
ID: 23, Lexema: (, Nome: Left Parenthesis, Index: 29
ID: 24, Lexema: ), Nome: Right Parenthesis, Index: 28
ID: 25, Lexema: ;, Nome: Semicolon, Index: 27
ID: 26, Lexema: :=, Nome: ASSIGN_OP, Index: 24
ID: 27, Lexema: *, Nome: Mult, Index: 38
ID: 28, Lexema: 1.9, Nome: Decimal, Index: 23
ID: 29, Lexema: >, Nome: GT, Index: 36
ID: 30, Lexema: 10, Nome: Interger, Index: 22
ID: 31, Lexema: ``, Nome: Backtick, Index: 46
ID: 32, Lexema: Maior, Nome: Identifier, Index: 21
ID: 33, Lexema: que, Nome: Identifier, Index: 21
ID: 34, Lexema: :, Nome: Colon, Index: 45
ID: 35, Lexema: ´´, Nome: Acute Accent, Index: 47
